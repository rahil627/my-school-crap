C:\Documents and Settings\Rahil\My Documents\My School\ECE346\midterm\m.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Sun Mar 08 23:55:18 2009

    1:          =000000D9              OC3_VEC         EQU     $00D9   ;pseudo-vector location for OC3         
    2:          =00000000              DATA            EQU     $0000   ;Start of data segment
    3:          =00000100              MAIN            EQU     $0100   ;Start of code segment
    4:          =0000FFB8              OUTA            EQU     $FFB8   ;OUTA outputs accA ASCII character to terminal
    5:          =0000FFCD              INCHAR          EQU     $FFCD   ;INCHAR inputs ASCII character to accA and echo back, loops until it gets something
    6:                                 
    7:                                 *6811 special register definitions
    8:          =00001004              PORTB           EQU     $1004   ;7-segment display (accB)
    9:                                 ;PORTC          EQU     $1003
   10:          =0000100A              PORTE           EQU     $100A
   11:          =00001007              DDRC            EQU     $1007
   12:          =0000100E              TCNT            EQU     $100E   ;free running counter
   13:          =0000101A              TOC3            EQU     $101A   ;output compare register
   14:          =00001020              TCTL1           EQU     $1020
   15:          =00001022              TMSK1           EQU     $1022
   16:          =00001023              TFLG1           EQU     $1023
   17:                                 
   18:                                 *Masks for manipulating output compare interrupts
   19:          =00000020              OC3F            EQU     %00100000
   20:          =00000020              OC3I            EQU     %00100000
   21:                                 
   22:                                 *Some definitions used for time base and pulse width 
   23:          =0000000C              ONE_CNT         EQU     12      ;25ms  *  12  = .3s     .15     
   24:          =0000001C              ZERO_CNT        EQU     28      ;25ms  *  28  = .7s     .35
   25:          =0000C350              TIME_BASE       EQU     50000   ;0.5us *50000 = 25ms
   26:          =000061A8              TIME_BASE_FAST  EQU     25000   ;0.5us *25000 = 12.5ms  time_base_fast=time_base/2
   27:          =00002710              OFFSET          EQU     10000   ;0.5us *10000 =  5ms
   28:                                 
   29:          =00000000                      ORG DATA        ;initialize data
   30:     0000 +0001                  CNTR            RMB     1       ;time base counter
   31:     0001 +0001                  STATE           RMB     1       ;interrupt state variable
   32:                                 
   33:     0002 00 01 02 03 04 05      NUM             FCB     $00, $01, $02, $03, $04, $05, $06, $07, $08, $09, $0A, $0B, $0C, $0D, $0E, $0F ;used to compare to count, increments/decerements the same time as HEX does, so they are always together
           0008 06 07 08 09 0A 0B 
           000E 0C 0D 0E 0F 
   34:     0012 C0 CF 92 86 8D A4      HEX             FCB     $C0, $CF, $92, $86, $8D, $A4, $A0, $CE, $80, $8C, $88, $A1, $F0, $83, $B0, $B8 ;hex value of displayed characters
           0018 A0 CE 80 8C 88 A1 
           001E F0 83 B0 B8 
   35:     0022 00                     COUNT           FCB     $00
   36:                                 ;COUNT2         FCB     $00     ;first nibble
   37:     0023 00                     STRIDE          FCB     $00
   38:                                 
   39:                                 ;booleans                        0 = default    1 = user changed
   40:     0024 00                     DOWN            FCB     $00     ;0 = count up   1 = count down
   41:                                 ;PAUSE          FCB     $00     ;0 = not paused 1 = pause
   42:     0025 00                     FAST            FCB     $00     ;0 = normal     1=fast
   43:                                 
   44:          =00000100                      ORG MAIN
   45:                                 *DATA INITIALIZATION (clear state and counter values)
   46:     0100 86 00                          LDAA    #0      ;load 0 into accA
   47:     0102 97 01                          STAA    STATE   ;state=0
   48:     0104 97 00                          STAA    CNTR    ;cntr=0
   49:                                 
   50:     0106 CE 0002                        LDX     #NUM    ;points to the beginning of NUM
   51:     0109 18CE 0012                      LDY     #HEX    ;points to the beginning of DAT2
   52:                                 
   53:                                 *---------------- Interrupt initialization ----------------------------
   54:                                 
   55:                                 *JUMP TABLE INITIALIZATION
   56:     010D 86 7E                          LDAA    #$7E            ;SET UP OC3 JUMP TABLE    
   57:     010F 97 D9                          STAA    OC3_VEC         ;FOR JMP
   58:     0111 CC 017F                        LDD     #OC3_SVC        ; TO
   59:     0114 DD DA                          STD      OC3_VEC+1      ;OC3 INTERRUPT SERVICE
   60:                                 
   61:                                 *OC3 INTERRUPT INITIALIZATION        
   62:     0116 86 20                          LDAA    #OC3I           ;SET UP OC3 INTERRUPT
   63:     0118 B7 1022                        STAA    TMSK1           ;ENABLE OC3 IN MASK REGISTER
   64:     011B 86 20                          LDAA    #OC3F           ;SET UP TO CLEAR
   65:     011D B7 1023                        STAA    TFLG1           ;OC3  INTERRUPT FLAG
   66:                                 
   67:                                 *TOC3 INITIALIZATION        
   68:     0120 FC 100E                        LDD     TCNT            ;GET CURRNT VALUE OF TCNT
   69:     0123 C3 2710                        ADDD   #OFFSET          ;ADD 5 MS OFFSET
   70:     0126 FD 101A                        STD     TOC3            ;SET UP  TOC3
   71:                                 
   72:     0129 0E                             CLI                     ;ENABLE SYSTEM INTERRUPT
   73:                                 *--------------- End Interrupt initialization ------------------------
   74:                                 
   75:     012A                        COUNT_UP        ;LDAB   #0
   76:     012A D7 24                                  STAB    DOWN
   77:                                                 ;BRA    INPUT   ;to save a byte
   78:                                 
   79:                                 ;loops through this constantly checking for inchar
   80:     012C BD FFCD                INPUT   JSR     INCHAR
   81:                                 
   82:                                         ;turn off a setting
   83:     012F C6 00                          LDAB    #0
   84:                                 
   85:     0131 81 4E                          CMPA    #'N'
   86:     0133 27 35                          BEQ     NORMAL_MODE
   87:                                         
   88:     0135 81 2B                          CMPA    #'+'
   89:     0137 27 F1                          BEQ     COUNT_UP
   90:                                 
   91:     0139 81 50                          CMPA    #'P'
   92:     013B 27 31                          BEQ     PAUSE
   93:                                 
   94:     013D 81 52                          CMPA    #'R'
   95:     013F 27 19                          BEQ     RESET
   96:                                 
   97:                                         ;turn on a setting
   98:     0141 C6 01                          LDAB    #1      
   99:                                 
  100:     0143 81 46                          CMPA    #'F'
  101:     0145 27 1F                          BEQ     FAST_MODE
  102:                                 
  103:     0147 81 2D                          CMPA    #'-'
  104:     0149 27 17                          BEQ     COUNT_DOWN
  105:                                 
  106:     014B 81 45                          CMPA    #'E'
  107:     014D 27 23                          BEQ     UNPAUSE
  108:                                 
  109:                                         ;other
  110:     014F 81 53                          CMPA    #'S'
  111:     0151 27 23                          BEQ     CHANGE_STRIDE
  112:                                 
  113:                                         ;CMPA   #'D'
  114:                                         ;BEQ    ENDP
  115:                                 
  116:                                         ;CMPA   #'H'
  117:                                         ;BEQ    ENDP
  118:                                 
  119:     0153 81 51                          CMPA    #'Q'
  120:     0155 27 02                          BEQ     ENDP
  121:                                 
  122:     0157 20 D3                          BRA     INPUT   ;loop
  123:                                 
  124:                                 ;functions
  125:     0159 3F                     ENDP    SWI
  126:                                 
  127:     015A                        RESET           ;LDAB   #0              ;count=0
  128:     015A D7 22                                  STAB    COUNT
  129:     015C C6 01                                  LDAB    #1              ;stride=1
  130:     015E D7 23                                  STAB    STRIDE
  131:     0160 20 CA                                  BRA     INPUT
  132:                                 
  133:     0162                        COUNT_DOWN      ;LDAB   #1              ;down=1
  134:     0162 D7 24                                  STAB    DOWN
  135:     0164 20 C6                                  BRA     INPUT
  136:                                 
  137:     0166                        FAST_MODE       ;LDAB   #1              ;fast=1
  138:     0166 D7 25                                  STAB    FAST
  139:     0168 20 C2                                  BRA     INPUT
  140:                                 
  141:     016A                        NORMAL_MODE     ;LDAB   #0              ;fast=0
  142:     016A D7 25                                  STAB    FAST
  143:     016C 20 BE                                  BRA     INPUT
  144:                                 
  145:     016E                        PAUSE           ;LDAB   #0              ;stride=0
  146:     016E D7 23                                  STAB    STRIDE
  147:                                                 ;count + DP ...how to get this hex?
  148:                                                 ;then need to revert back to count
  149:     0170 20 BA                                  BRA     INPUT
  150:                                 
  151:     0172                        UNPAUSE         ;LDAB   #1              ;stride=1
  152:     0172 D7 23                                  STAB    STRIDE
  153:     0174 20 B6                                  BRA     INPUT
  154:                                 
  155:     0176 BD FFCD                CHANGE_STRIDE   JSR     INCHAR
  156:     0179 80 30                                  SUBA    #$30            ;ASCII->HEX conversion
  157:                                                 ;conditionals?
  158:     017B 97 23                                  STAA    STRIDE          ;Store inputted character in hex into Strid function
  159:     017D 20 AD                                  BRA     INPUT           ;Go back to INPUT function
  160:                                 
  161:                                 
  162:                                 * OC3 INTERUPT SERVICE ROUTINE INTERRUPTS EVERY 10 MS AND 
  163:                                 * DECREMENTS A COUNTER PROVIDES A TIME BASE EVENT EVERY 10 MS
  164:     017F 86 20                  OC3_SVC LDAA   #OC3F            ;SET UP TO 
  165:     0181 B7 1023                        STAA    TFLG1           ;CLEAR OC3F
  166:     0184 FC 101A                        LDD     TOC3            ;SET UP FOR NEXT INTERRUPT
  167:                                 
  168:     0187 C6 01                          LDAB    #1
  169:     0189 D1 25                          CMPB    FAST
  170:     018B 27 08                          BEQ     ADDD_F
  171:                                         ;BNE    ADDD_N
  172:                                 
  173:     018D C3 C350                ADDD_N  ADDD   #TIME_BASE       ;add time_base
  174:     0190 FD 101A                        STD     TOC3            ;and store it
  175:     0193 20 06                          BRA     LDSTATE
  176:                                 
  177:     0195 C3 61A8                ADDD_F  ADDD   #TIME_BASE_FAST  ;add time_base_fast
  178:     0198 FD 101A                        STD     TOC3            ;and store it
  179:                                 
  180:     019B 96 01                  LDSTATE LDAA    STATE           ;load state
  181:     019D 81 01                          CMPA    #1              ;branch to that state           
  182:     019F 27 24                          BEQ     ONE
  183:                                         ;BNE    ZERO
  184:                                  
  185:     01A1 96 00                  ZERO    LDAA    CNTR            ;if(cntr!=0)exit interrupt
  186:     01A3 26 42                          BNE     OC3END
  187:                                         
  188:     01A5 86 0C                          LDAA    #ONE_CNT        ;cntr=one_cnt
  189:     01A7 97 00                          STAA    CNTR
  190:                                         
  191:     01A9 86 01                          LDAA    #1              ;state=1 (set next state)
  192:     01AB 97 01                          STAA    STATE
  193:                                 
  194:     01AD 96 22                          LDAA    COUNT           ;Load Counter
  195:                                 
  196:     01AF D6 24                          LDAB    DOWN            ;if(down==1){branch to sub}
  197:     01B1 C1 01                          CMPB    #1
  198:     01B3 27 04                          BEQ     SUB
  199:                                         ;BNE    ADD     
  200:                                 
  201:                                         ;count+=stride
  202:     01B5 9B 23                          ADDA    STRIDE          ;a=count+stride
  203:     01B7 20 02                          BRA     MASK
  204:                                 
  205:     01B9 90 23                  SUB     SUBA    STRIDE          ;a=count-stride
  206:                                 
  207:     01BB 97 22                  MASK    STAA    COUNT           ;count=a (count+/-stride)
  208:     01BD 84 F0                          ANDA    #%11110000      ;mask lower bits
  209:                                 
  210:     01BF 44                             LSRA                    ;Shift right 4x to get high bits to the right side
  211:     01C0 44                             LSRA
  212:     01C1 44                             LSRA
  213:     01C2 44                             LSRA
  214:                                 
  215:     01C3 20 12                          BRA     COMP            ;continue to comp/display
  216:                                 
  217:     01C5 96 00                  ONE     LDAA    CNTR                            
  218:     01C7 26 1E                          BNE     OC3END
  219:     01C9 86 1C                          LDAA    #ZERO_CNT
  220:     01CB 97 00                          STAA    CNTR    
  221:     01CD 86 00                          LDAA    #0
  222:     01CF 97 01                          STAA    STATE
  223:                                 
  224:     01D1 96 22                          LDAA    Count           ;Load Counter
  225:     01D3 84 0F                          ANDA    #%00001111      ;mask higher bits
  226:                                 
  227:     01D5 20 00                          BRA     COMP
  228:                                 
  229:                                 
  230:                                 ;X and Y increment together, so it just loops together until it reaches count (taken from assignment2)
  231:     01D7 E6 00                  COMP    LDAB    0, X            ;b=x
  232:     01D9 11                             CBA                     ;count==x? [compare b to a]
  233:     01DA 27 05                          BEQ     DISPLAY         ;branch if they are equal each other [branch if equal to zero]
  234:     01DC 08                             INX                     ;x++
  235:     01DD 1808                           INY                     ;y++
  236:     01DF 20 F6                          BRA     COMP            ;branch to comp [branch always]
  237:                                 
  238:     01E1 18A6 00                DISPLAY LDAA    0, Y            ;portb=hex
  239:     01E4 B7 1004                        STAA    PORTB
  240:                                         ;BRA    OC3END
  241:                                 
  242:     01E7 7A 0000                OC3END  DEC     CNTR            ;cntr--
  243:     01EA 3B                             RTI                     ;end interrupt
  244:                                 
  245:                                 
  246:                                 
  247:                                 ;decimal idea
  248:                                 
  249:                                         ;hex-decimal conversion
  250:                                 ;count=B4
  251:                                 ;ldaa high_nibble       ;11
  252:                                 ;ldab #16               ;16
  253:                                 ;mul ab                 ;176[store in 16-bit/double]
  254:                                 ;addd low_nibble        ;180
  255:                                 ;stad
  256:                                 
  257:                                         ;display
  258:                                 ;state0
  259:                                 ;ANDD   #%0000000000001111      ;16-bit mask
  260:                                 ;DISPLAY D
  261:                                 
  262:                                 ;state1
  263:                                 ;ANDD   #%0000000011110000      ;16-bit mask
  264:                                 ;DISPLAY D
  265:                                 
  266:                                 ;state2
  267:                                 ;ANDD   #%0000111100000000      ;16-bit mask
  268:                                 ;DISPLAY D

Symbols:
addd_f                          *00000195
change_stride                   *00000176
cntr                            *00000000
comp                            *000001d7
count                           *00000022
count_down                      *00000162
count_up                        *0000012a
data                            *00000000
display                         *000001e1
down                            *00000024
endp                            *00000159
fast                            *00000025
fast_mode                       *00000166
hex                             *00000012
inchar                          *0000ffcd
input                           *0000012c
ldstate                         *0000019b
main                            *00000100
mask                            *000001bb
normal_mode                     *0000016a
num                             *00000002
oc3_svc                         *0000017f
oc3_vec                         *000000d9
oc3end                          *000001e7
oc3f                            *00000020
oc3i                            *00000020
offset                          *00002710
one                             *000001c5
one_cnt                         *0000000c
pause                           *0000016e
portb                           *00001004
reset                           *0000015a
state                           *00000001
stride                          *00000023
sub                             *000001b9
tcnt                            *0000100e
tflg1                           *00001023
time_base                       *0000c350
time_base_fast                  *000061a8
tmsk1                           *00001022
toc3                            *0000101a
unpause                         *00000172
zero_cnt                        *0000001c

