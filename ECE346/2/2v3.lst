C:\Documents and Settings\Rahil\My Documents\My School\ECE346\2\2v3.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Sun Mar 01 00:47:06 2009

    1:          =00000100              MAIN    EQU $0100       ;executable program begins at (hex)110
    2:          =00000000              DATA    EQU $0000       ;data segment begins at (hex)000
    3:          =0000FFCD              INCHAR  EQU $FFCD       ;INCHAR inputs ASCII character to accA and echo back, loops until it gets something
    4:          =0000FFB8              OUTA    EQU $FFB8       ;OUTA outputs accA ASCII character to terminal
    5:          =0000002C              DELIM   EQU ','         ;delimiter symbol
    6:          =00001004              PORTB   EQU $1004       ;counter/light (accB)
    7:          =0000100A              PORTE   EQU $100A       ;input port (accA)
    8:                                 
    9:          =00000000                      ORG DATA        ;initialize data
   10:     0000 43 68 61 72 61 63      PROMPT  FCC 'Character=>'       ;'please enter a hexidecimal: '
           0006 74 65 72 3D 3E 
   11:     000B 3E                     TERM1   FCB '>'         ;create ASCII code for "#", termination symbol
   12:     000C 23                     TERM2   FCB $23 ; HEX(23) = ASCII(#)  could have done FCB '#'
   13:     000D 30 31 32 33 34 35      DAT     FCB $30, $31 ,$32 ,$33, $34, $35, $36, $37, $38 ,$39, $41, $62, $43, $64, $45, $46, $67, $48, $50 ; Data starting from $02 until $13
           0013 36 37 38 39 41 62 
           0019 43 64 45 46 67 48 
           001F 50 
   14:     0020 C0 CF 92 86 8D A4      DAT2    FCB $C0, $CF, $92, $86, $8D, $A4, $A0, $CE, $80, $8C, $88, $A1, $F0, $83, $B0, $B8, $84, $89, $98 ; portB hex
           0026 A0 CE 80 8C 88 A1 
           002C F0 83 B0 B8 84 89 
           0032 98 
   15:                                 
   16:                                 
   17:          =00001004                      ORG PORTB
   18:     1004 FF                             FCB $FF    ; Put nothing in LED before program execution
   19:                                 
   20:          =00000100                      ORG MAIN        ;main()         
   21:     0100 86 0A                  INPUT   LDAA #$000A     ;load new line
   22:     0102 BD FFB8                        JSR OUTA        ;jump to sub routine OUTA - display the new line
   23:     0105 CE 0000                        LDX #PROMPT     ;load x with prompt
   24:     0108 BD 0143                        JSR OUTSTR      ;jump to OUTSTR function to output prompt text character by character
   25:                                 
   26:     010B BD FFCD                        JSR INCHAR      ;jump to sub routine INCHAR - wait for keyboard input to ACCA
   27:                                         ;LDAA PORTE     ;read PortE (input port)
   28:     010E 91 0C                          CMPA TERM2      ;if(termination symbol [A-$23])
   29:     0110 27 3E                          BEQ EXIT        ;then exit (=0 ?) check Z CCR bit       
   30:                                 
   31:     0112 CE 001F                        LDX #$001F      ;point x to the end of ASCII data [31] 12+31 why does it start at 12?
   32:     0115 18CE 0032                      LDY #$0032      ;point y to the end of HEX data [50] 31+19 chars
   33:                                 
   34:     0119 E6 00                  COMP    LDAB 0, X       ;load B with data where X is pointing
   35:     011B 11                             CBA             ;Compare B to A
   36:     011C 27 07                          BEQ OUTB        ;If they are the same, then print it out on PortB
   37:                                         
   38:     011E 09                             DEX             ;x-- (point x to the next value of my data)
   39:     011F 1809                           DEY             ;y-- (point y to the next value of my data)
   40:     0121 27 0F                          BEQ DECM        ;if X = 0 then no match was found, display a decimal point and go to the beginning
   41:     0123 20 F4                          BRA COMP        ;else(loop)
   42:                                 
   43:     0125 18A6 00                OUTB    LDAA 0, Y       ;load A with data where Y is pointing
   44:     0128 B7 1004                        STAA PORTB      ;store A onto PortB, B=A, light up what Y is pointing to
   45:     012B 86 2C                          LDAA #DELIM     ;load delimiter
   46:     012D BD FFB8                        JSR OUTA        ;display delimiter
   47:     0130 20 CE                          BRA  INPUT      ;branch back to INPUT (loop)
   48:                                 
   49:     0132 86 7F                  DECM    LDAA #$007F     ;load DP
   50:     0134 B7 1004                        STAA PORTB      ;light DP
   51:     0137 86 3F                          LDAA #$003F     ;load hex for "?" into A to display as error message on screen
   52:     0139 BD FFB8                        JSR OUTA        ;display error message
   53:     013C 86 2C                          LDAA #DELIM     ;load delimiter
   54:     013E BD FFB8                        JSR OUTA        ;display delimiter
   55:     0141 20 BD                          BRA INPUT       ;send back to beginning 
   56:                                 
   57:                                 
   58:     0143 A6 00                  OUTSTR  LDAA 0,X        ;Eexpecting that X points to the start of the data (prompt)
   59:     0145 91 0B                          CMPA TERM1      ;compare character in prompt to termination character '>'
   60:     0147 27 06                          BEQ ENDSR       ;if true, end OUTSTR
   61:                                         
   62:     0149 BD FFB8                        JSR OUTA        ;jump to sub routine OUTA
   63:     014C 08                             INX             ;increment X
   64:     014D 20 F4                          BRA OUTSTR      ;start OUTSTR loop over again until all characters are displayed to terminal
   65:                                 
   66:     014F 39                     ENDSR   RTS
   67:                                 
   68:     0150 3F                     EXIT    SWI             ;end 

Symbols:
comp                            *00000119
data                            *00000000
decm                            *00000132
delim                           *0000002c
endsr                           *0000014f
exit                            *00000150
inchar                          *0000ffcd
input                           *00000100
main                            *00000100
outa                            *0000ffb8
outb                            *00000125
outstr                          *00000143
portb                           *00001004
prompt                          *00000000
term1                           *0000000b
term2                           *0000000c

