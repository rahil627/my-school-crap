C:\Documents and Settings\Rahil\My Documents\My School\ECE346\2\2.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Fri Feb 20 10:56:00 2009

    1:          =00000100              MAIN    EQU $0100       ;executable program begins at (hex)110
    2:          =00000000              DATA    EQU $0000       ;data segment begins at (hex)000
    3:          =0000FFCD              INCHAR  EQU $FFCD       ;utility subroutine that waits for input
    4:          =0000FFB8              OUTA    EQU $FFB8       ;utility program for outputting ASCII (terminal/display)
    5:          =0000002C              DELIM   EQU ','         ;delimiter symbol
    6:          =00001004              PORTB   EQU $1004       ;counter/light (accB)
    7:          =0000100A              PORTE   EQU $100A       ;input port (accA)
    8:                                 
    9:          =00000000                      ORG DATA ;initialize data
   10:     0000 68 65 78 61 64 65      PROMPT  FCC 'hexadecimal:_~' ;'please enter a hexidecimal: '
           0006 63 69 6D 61 6C 3A 
           000C 5F 7E 
   11:                                 ;ERROR  FCC '_cannot display that character'
   12:     000E 23                     TERM    FCB $23 ;create ASCII code for "#", termination symbol
   13:     000F 7E                     TERM2   FCB '~' ;used in outstr subroutine
   14:     0010 30 31 32 33 34 35      ASCII   FCB $30, $31 ,$32 ,$33, $34, $35, $36, $37, $38, $39, $41, $62, $43, $64, $45, $46, $67, $48, $50 ;Data starting from $02 until $0B
           0016 36 37 38 39 41 62 
           001C 43 64 45 46 67 48 
           0022 50 
   15:     0023 C0 CF 92 86 8D A4      HEX     FCB $C0, $CF, $92, $86, $8D, $A4, $A0, $CE, $80, $8C, $88, $A1, $F0, $83, $B0, $B8, $84, $89, $98 ;port B hex
           0029 A0 CE 80 8C 88 A1 
           002F F0 83 B0 B8 84 89 
           0035 98 
   16:                                 
   17:                                         ;ORG PORTB
   18:                                         ;FCB $FF        ;put nothing in LED before program execution
   19:                                 
   20:          =00000100                      ORG MAIN        ;main()
   21:     0100 86 0A                  INPUT   LDAA #$000A     ;load new line
   22:     0102 BD FFB8                        JSR OUTA        ;jump to sub routine OUTA - display the new line
   23:     0105 CE 0000                        LDX #PROMPT     ;load x with prompt
   24:     0108 BD 013E                        JSR OUTSTR
   25:                                 
   26:     010B BD FFCD                        JSR INCHAR      ;wait for keyboard input to ACCA
   27:                                         ;LDAA PORTE     ;read PortE (input port)
   28:     010E 91 0E                          CMPA TERM       ;if(termination symbol [A-$23])
   29:     0110 27 39                          BEQ EXIT        ;then exit
   30:     0112 CE 001F                        LDX #$001F      ;point x to the end of ASCII data [31] 12+31 why does it start at 12?
   31:     0115 18CE 0032                      LDY #$0032      ;point y to the end of HEX data [50] 31+19 chars
   32:                                 
   33:     0119 E6 00                  COMPARE LDAB 0, X       ;load B with data where X is pointing
   34:     011B 11                             CBA             ;compare B to A
   35:     011C 27 07                          BEQ OUTB        ;if they are the same, then print it out on PortB
   36:     011E 09                             DEX             ;x-- (point x to the next value of my data)
   37:     011F 1809                           DEY             ;y-- (point y to the next value of my data)
   38:     0121 27 0F                          BEQ DP          ;if X = 0 then no match was found, display a decimal point and go to the beginning*
   39:     0123 20 F4                          BRA COMPARE     ;else(loop)
   40:                                         
   41:     0125 18A6 00                OUTB    LDAA 0, Y       ;load A with data where Y is pointing
   42:     0128 B7 1004                        STAA PORTB      ;store A onto PortB, B=A, light up what Y is pointing to
   43:     012B 96 2C                          LDAA DELIM      ;load delimiter
   44:     012D BD FFB8                        JSR OUTA        ;display delimiter
   45:     0130 20 CE                          BRA INPUT       ;branch back to INPUT (loop)
   46:                                 
   47:     0132 86 7F                  DP      LDAA #$007F     ;load DP
   48:     0134 B7 1004                        STAA PORTB      ;light DP
   49:                                         ;LDAA #ERROR    ;load error message
   50:                                         ;JSR OUTA       ;display error message
   51:     0137 86 2C                          LDAA #DELIM     ;load delimiter
   52:     0139 BD FFB8                        JSR OUTA        ;display delimiter
   53:     013C 20 C2                          BRA INPUT       ;send back to beginning
   54:                                 
   55:     013E A6 00                  OUTSTR  LDAA 0,X        ;expecting that X points to the start of the data (prompt)
   56:     0140 91 0F                          CMPA TERM2      ;compare character in prompt to termination character '~'
   57:     0142 27 06                          BEQ ENDSR       ;if true, end OUTSTR
   58:     0144 BD FFB8                        JSR OUTA        ;jump to sub routine OUTA
   59:     0147 08                             INX             ;increment X
   60:     0148 20 F4                          BRA OUTSTR      ;start OUTSTR loop over again until all characters are displayed to terminal
   61:                                 
   62:     014A 39                     ENDSR   RTS
   63:                                 
   64:     014B 3F                     EXIT    SWI             ;end

Symbols:
compare                         *00000119
data                            *00000000
delim                           *0000002c
dp                              *00000132
endsr                           *0000014a
exit                            *0000014b
inchar                          *0000ffcd
input                           *00000100
main                            *00000100
outa                            *0000ffb8
outb                            *00000125
outstr                          *0000013e
portb                           *00001004
prompt                          *00000000
term                            *0000000e
term2                           *0000000f

