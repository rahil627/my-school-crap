C:\Documents and Settings\Rahil\My Documents\My School\ECE346\5\5.lst - generated by MGTEK Assembler ASM11 V1.26 Build 144 for WIN32 (x86) - Tue May 05 03:18:42 2009

    1:                                 *equates---------------------------------------------------------------------
    2:          =00000000              DATA    EQU $0000       ;start of data segment
    3:          =00000100              MAIN    EQU $0100       ;start of program segment
    4:                                 
    5:                                 *LCD display
    6:          =0000B5F0              COMBASE EQU $B5F0
    7:          =0000B5F1              DATBASE EQU $B5F1
    8:                                 
    9:                                 *interrupts
   10:          =00001022              TMSK1    EQU $1022
   11:          =00001023              TFLG1    EQU $1023
   12:          =0000100E              TCNT     EQU $100E      ;free running counter
   13:                                 
   14:                                 ;output compare registers
   15:          =00001018              TOC2     EQU $1018
   16:          =0000101A              TOC3     EQU $101A
   17:                                 
   18:                                 ;masks for manipulating output compare interrupts
   19:          =00000040              OC2F     EQU %01000000
   20:          =00000040              OC2I     EQU %01000000
   21:                                 
   22:          =00000020              OC3F     EQU %00100000
   23:          =00000020              OC3I     EQU %00100000
   24:                                 
   25:                                 ;pseudo-vector location for OCs
   26:          =000000DC              OC2_VEC  EQU $00DC
   27:          =000000D9              OC3_VEC  EQU $00D9
   28:                                 
   29:                                 *from HW4
   30:          =0000000F              DATA_LEN        EQU $0F
   31:          =00000002              TWO             EQU $02
   32:          =00000004              FOUR            EQU $04
   33:                                 
   34:          =000007D0              TIME_BASE       EQU 2000        ;1ms
   35:          =00000004              D_COUNT         EQU 4           ;4ms
   36:                                 
   37:                                 *SCI system registers
   38:          =0000102D              SCCR2   EQU $102D       ;SCI Control Register 2
   39:          =0000102E              SCSR    EQU $102E       ;SCI Status Register
   40:          =0000102F              SCDR    EQU $102F       ;SCI Data Register
   41:          =00001000              PORTA   EQU $1000
   42:                                 
   43:                                 *data----------------------------------------------------------------------
   44:          =00000000                       ORG DATA       ;initialize data
   45:                                 *LCD values from hw4
   46:     0000 38                     INIT_DATA   FCB $38     ;function set
   47:     0001 38                                 FCB $38     ;function set
   48:     0002 06                                 FCB $06     ;entry mode set
   49:     0003 01                                 FCB $01     ;clear display
   50:     0004 0F                                 FCB $0F     ;display on/off control
   51:                                 
   52:     0005 80                     CONT1       FCB $80    ; DD RAM Address Set to 000 0000
   53:     0006 C0                     CONT2       FCB $C0    ; DD RAM Address Set to 100 0000
   54:                                 
   55:     0007 69 6E 69 74 69 61      STRING FCB 'i','n','i','t','i','a','l','#'
           000D 6C 23 
   56:                                 
   57:                                 * Note the LCD data takes ASCII input directly
   58:     000F +0001                  CNTR            RMB 1
   59:     0010 +0000                  counter         RMB 0
   60:     0010 +0000                  string_length   RMB 0
   61:                                 
   62:                                 *main initializations-----------------------------------------------------------
   63:          =00000100                      ORG MAIN
   64:                                 *JUMP TABLE INITIALIZATION
   65:     0100 86 7E                          LDAA    #$7E          
   66:     0102 97 DC                          STAA    OC2_VEC
   67:     0104 CC 01A7                        LDD     #OC2_SVC      
   68:     0107 DD DD                          STD     OC2_VEC+1     
   69:                                 
   70:                                 *TOC2 INITIALIZATION
   71:     0109 FC 100E                        LDD     TCNT
   72:     010C FD 1018                        STD     TOC2
   73:                                 
   74:                                 *OC2 INTERRUPT INITIALIZATION        
   75:     010F 86 40                          LDAA    #OC2I           ;enable OC2 in mak register
   76:     0111 B7 1022                        STAA    TMSK1         
   77:     0114 86 40                          LDAA    #OC2F           ;clear OC3(2?) interrupt flag 
   78:     0116 B7 1023                        STAA    TFLG1
   79:     0119 0E                             CLI                     ;enable system interrupt
   80:                                 
   81:                                 *LCD initialization
   82:     011A C6 04                          LDAB    #FOUR
   83:     011C CE 0000                        LDX     #INIT_DATA
   84:                                 
   85:     011F A6 00                  M1      LDAA    0,X             ;a=x
   86:     0121 B7 B5F0                        STAA    COMBASE         ;display value x is pointing to
   87:                                 
   88:     0124 86 04                          LDAA    #D_COUNT        ;cntr=4
   89:     0126 97 0F                          STAA    CNTR
   90:     0128 96 0F                  LOOP1   LDAA    CNTR            ;4ms delay
   91:     012A 26 FC                          BNE     LOOP1
   92:     012C 08                             INX                     ;next block
   93:     012D 5A                             DECB
   94:     012E 2C EF                          BGE     M1              ;branch if greater than 0?
   95:                                         ;BRA    BUTTON
   96:                                 
   97:                                 *serial initalization
   98:                                         ;LDAA   #$5             ;don't have to change baud rate yet...
   99:                                         ;STAA   $102B           ;BRCR/BAUD
  100:     0130 7F 102C                        CLR     $102C           ;SCCR1 (not used)
  101:     0133 7F 102F                        CLR     SCDR            ;temp
  102:     0136 7F 102E                        CLR     SCSR            ;temp
  103:     0139 86 04                          LDAA    #%00000100      ;receive enable (RE), not sure if needed
  104:     013B B7 102F                        STAA    SCDR
  105:                                 
  106:                                 *main code starts here--------------------------------------------------------
  107:     013E 86 30                  init    LDAA    #'0'
  108:     0140 97 10                          STAA    counter
  109:     0142 96 05                          LDAA    CONT1           ;init/clear first line of LCD
  110:     0144 B7 B5F0                        STAA    COMBASE
  111:                                 
  112:     0147 B6 1000                button  LDAA    PORTA           ;wait until button is pushed
  113:     014A 81 89                          CMPA    #$89
  114:     014C 26 F9                          BNE     button
  115:                                 
  116:                                 *transmit string
  117:     014E 86 08                          LDAA    #%00001000              ;transmit enable
  118:     0150 B7 102D                        STAA    SCCR2
  119:                                 
  120:     0153 CE 0007                t_char  LDX     #string
  121:     0156 A6 00                          LDAA    0,X
  122:     0158 B7 102F                        STAA    SCDR
  123:     015B 08                             INX
  124:     015C 7C 0010                        INC     string_length
  125:     015F 81 23                          CMPA    #'#'
  126:     0161 BD 0190                        JSR     trans
  127:     0164 26 ED                          BNE     t_char
  128:                                 
  129:                                 *receive string
  130:     0166 86 04                          LDAA    #%00000100              ;receive enable
  131:     0168 B7 102D                        STAA    SCCR2
  132:                                 
  133:     016B CE 0007                r_char  LDX     #string
  134:     016E B6 102F                        LDAA    SCDR
  135:     0171 08                             INX
  136:                                         ;STAA   DATBASE         ;temp
  137:     0172 A7 00                          STAA    0,X
  138:     0174 BD 019B                        JSR     receive
  139:     0177 81 23                          CMPA    #'#'
  140:     0179 7F 102F                        CLR     SCDR            ;not sure if this is how receive works..
  141:     017C 26 ED                          BNE     r_char
  142:                                 
  143:                                 *display
  144:     017E CE 0007                        LDX     #string         ;hopefully works all at once, if not incx and loop...cmp to string_length too
  145:     0181 A6 00                          LDAA    0,X
  146:     0183 B7 B5F1                        STAA    DATBASE
  147:                                 
  148:     0186 86 04                          LDAA    #FOUR           ;wait 4ms
  149:     0188 97 0F                          STAA    CNTR
  150:     018A 96 0F                  wait4ms LDAA    CNTR
  151:     018C 26 FC                          BNE     wait4ms
  152:                                 
  153:     018E 20 AE                          BRA     init
  154:                                 
  155:                                 *subroutines-----------------------------------------------------------------
  156:     0190 B6 102E                trans   LDAA    SCSR            ;wait until transmit is complete (TC)
  157:     0193 84 40                          ANDA    #%01000000
  158:     0195 81 40                          CMPA    #%01000000
  159:     0197 27 0D                          BEQ     return
  160:     0199 20 F5                          BRA     trans
  161:                                 
  162:     019B B6 102E                receive LDAA    SCSR            ;wait until receive data register is full (RDRF)
  163:     019E 84 20                          ANDA    #%00100000
  164:     01A0 81 20                          CMPA    #%00100000
  165:     01A2 27 02                          BEQ     return
  166:     01A4 20 F5                          BRA     receive
  167:                                 
  168:     01A6 39                     return  RTS
  169:                                 
  170:                                 *interrupts------------------------------------------------------------------
  171:     01A7 86 40                  OC2_SVC LDAA  #OC2F             ;SET UP TO 
  172:     01A9 B7 1023                        STAA  TFLG1             ;CLEAR OC2F 
  173:     01AC FC 1018                        LDD   TOC2              ;SET UP FOR NEXT INTERRUPT
  174:     01AF C3 07D0                        ADDD  #TIME_BASE        ;ADD TIMEBASE (1 MS)
  175:     01B2 FD 1018                        STD   TOC2              ;AND STORE 
  176:                                 *------------------------
  177:     01B5 7A 000F                        DEC   CNTR              ;DEC TIME BASE COUNTER
  178:     01B8 3B                     OC2RTI  RTI                     ;EXIT
  179:                                 

Symbols:
button                          *00000147
cntr                            *0000000f
combase                         *0000b5f0
cont1                           *00000005
counter                         *00000010
d_count                         *00000004
data                            *00000000
datbase                         *0000b5f1
four                            *00000004
init                            *0000013e
init_data                       *00000000
loop1                           *00000128
m1                              *0000011f
main                            *00000100
oc2_svc                         *000001a7
oc2_vec                         *000000dc
oc2f                            *00000040
oc2i                            *00000040
porta                           *00001000
r_char                          *0000016b
receive                         *0000019b
return                          *000001a6
sccr2                           *0000102d
scdr                            *0000102f
scsr                            *0000102e
string                          *00000007
string_length                   *00000010
t_char                          *00000153
tcnt                            *0000100e
tflg1                           *00001023
time_base                       *000007d0
tmsk1                           *00001022
toc2                            *00001018
trans                           *00000190
wait4ms                         *0000018a

